import time
import hmac
import hashlib
import json
import requests

# üî• API-–∫–ª—é—á–∏ (Bybit Testnet)
API_KEY = "AAcAJZ2GoMUm5Ys1Gg"
API_SECRET = "BkevPX5c30WupN9RmW6m5EcviYwHYL5nHU6N"

# üìå URL API Bybit Testnet (V5)
API_URL = "https://api-testnet.bybit.com/v5/order/create"

# üïí –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ —Å–µ—Ä–≤–µ—Ä–∞
def get_server_time():
    return str(int(time.time() * 1000))

# ‚úç **–§—É–Ω–∫—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–æ–¥–ø–∏—Å–∏**
def generate_signature(api_secret, params):
    sorted_params = "&".join([f"{key}={params[key]}" for key in sorted(params)])
    return hmac.new(
        bytes(api_secret, "utf-8"),
        bytes(sorted_params, "utf-8"),
        hashlib.sha256
    ).hexdigest()

# üìå **–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ —Ñ–∞–π–ª**
def log_data(filename, data):
    with open(filename, "a", encoding="utf-8") as f:
        f.write(f"{time.strftime('%Y-%m-%d %H:%M:%S')} - {json.dumps(data, indent=4)}\n")

# üìå **–û—Ç–ø—Ä–∞–≤–∫–∞ –º–∞—Ä–∫–µ—Ç-–æ—Ä–¥–µ—Ä–∞**
def place_market_order():
    timestamp = get_server_time()
    usdt_amount = 7  # üî• –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ 5 USDT, –±–µ—Ä—ë–º —Å –∑–∞–ø–∞—Å–æ–º

    params = {
        "api_key": API_KEY,
        "category": "spot",
        "symbol": "BTCUSDT",
        "side": "Buy",
        "orderType": "Market",
        "marketUnit": "quoteCoin",
        "qty": str(usdt_amount),
        "timestamp": timestamp,
        "recvWindow": "5000"
    }

    params["sign"] = generate_signature(API_SECRET, params)

    headers = {
        "X-BYBIT-API-KEY": API_KEY,
        "X-BYBIT-TIMESTAMP": timestamp,
        "X-BYBIT-SIGN": params["sign"],
        "Content-Type": "application/json"
    }

    response = requests.post(API_URL, headers=headers, json=params)
    data = response.json()

    # üìå –õ–æ–≥–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç API
    log_data("order_log.txt", {"request": params, "response": data})

    print(json.dumps(data, indent=4))

    if data.get("retCode") == 0:
        print(f"‚úÖ –û—Ä–¥–µ—Ä —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω! –ö—É–ø–ª–µ–Ω–æ BTC –Ω–∞ {usdt_amount} USDT")
    else:
        print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –æ—Ä–¥–µ—Ä–∞:", data)

# üöÄ **–ó–∞–ø—É—Å–∫**
if __name__ == "__main__":
    place_market_order()
