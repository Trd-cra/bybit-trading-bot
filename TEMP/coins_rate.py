import requests
import csv
import json

# URL API ByBit (–¢–µ—Å—Ç–æ–≤–∞—è –≤–µ—Ä—Å–∏—è)
url = "https://api-testnet.bybit.com/v5/market/tickers?category=spot"
headers = {"Content-Type": "application/json"}

# –§–∞–π–ª –¥–ª—è –ª–æ–≥–æ–≤
log_file = "coins_rate.log"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –¥–∞–Ω–Ω—ã—Ö
def fetch_data():
    try:
        response = requests.get(url, headers=headers, timeout=10)
        response.raise_for_status()  # –ü—Ä–æ–≤–µ—Ä—è–µ–º HTTP –æ—à–∏–±–∫–∏
        data = response.json()
        
        # –õ–æ–≥–∏—Ä—É–µ–º –ø–æ–ª–Ω—ã–π –æ—Ç–≤–µ—Ç API
        with open(log_file, "w") as log:
            json.dump(data, log, indent=4)
        
        if "result" not in data or "list" not in data["result"]:
            print("‚ùå –û—à–∏–±–∫–∞: –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞ API")
            return []
        return data["result"]["list"]
    except requests.exceptions.RequestException as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ API: {e}")
        return []

# –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –º–æ–Ω–µ—Ç
tickers = fetch_data()

# –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –∞–∫—Ç–∏–≤–Ω—ã–µ –º–æ–Ω–µ—Ç—ã —Å –Ω–µ–Ω—É–ª–µ–≤—ã–º –æ–±—ä—ë–º–æ–º —Ç–æ—Ä–≥–æ–≤
filtered_tickers = [t for t in tickers if float(t.get("turnover24h", 0)) > 0]

# –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –∏–∑–º–µ–Ω–µ–Ω–∏—é —Ü–µ–Ω—ã –∑–∞ 24 —á–∞—Å–∞ (–±–µ—Ä—ë–º —Ç–æ–ø-20)
top_24h_gainers = sorted(
    filtered_tickers,
    key=lambda x: float(x.get("price24hPcnt", 0)),
    reverse=True
)[:20]

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –≤ –¥–∞–Ω–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä price10mPcnt
if any("price10mPcnt" in t for t in filtered_tickers):
    # –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –∏–∑–º–µ–Ω–µ–Ω–∏—é —Ü–µ–Ω—ã –∑–∞ 10 –º–∏–Ω—É—Ç (–±–µ—Ä—ë–º —Ç–æ–ø-20)
    top_10m_gainers = sorted(
        [t for t in filtered_tickers if "price10mPcnt" in t],  
        key=lambda x: float(x["price10mPcnt"]),
        reverse=True
    )[:20]
else:
    top_10m_gainers = []

# –í—ã–≤–æ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
print("\nüîù –¢–æ–ø-20 –ø–æ –∏–∑–º–µ–Ω–µ–Ω–∏—é —Ü–µ–Ω—ã –∑–∞ 24 —á–∞—Å–∞:")
for t in top_24h_gainers:
    print(f"{t['symbol']}: {float(t['price24hPcnt']) * 100:.2f}%")

print("\n‚ö° –¢–æ–ø-20 –ø–æ –∏–∑–º–µ–Ω–µ–Ω–∏—é —Ü–µ–Ω—ã –∑–∞ 10 –º–∏–Ω—É—Ç:")
if top_10m_gainers:
    for t in top_10m_gainers:
        print(f"{t['symbol']}: {float(t['price10mPcnt']) * 100:.2f}%")
else:
    print("‚ùå –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ 10-–º–∏–Ω—É—Ç–Ω—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö. –ü—Ä–æ–≤–µ—Ä—å –ª–æ–≥!")

# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ CSV
csv_file = "coins_rate.csv"
with open(csv_file, mode="w", newline="") as file:
    writer = csv.writer(file)
    writer.writerow(["–ú–æ–Ω–µ—Ç–∞", "–ò–∑–º–µ–Ω–µ–Ω–∏–µ –∑–∞ 24—á", "–ò–∑–º–µ–Ω–µ–Ω–∏–µ –∑–∞ 10 –º–∏–Ω"])
    for t in filtered_tickers:
        writer.writerow([
            t["symbol"],
            f"{float(t.get('price24hPcnt', 0)) * 100:.2f}%",
            f"{float(t.get('price10mPcnt', 0) or 0) * 100:.2f}%"  
        ])

print(f"\n‚úÖ –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ {csv_file}")
print(f"üìÇ –õ–æ–≥ API —Å–æ—Ö—Ä–∞–Ω—ë–Ω –≤ {log_file}")
